@using Elsa.Api.Client.Resources.ActivityDescriptors.Enums
@using Humanizer
@using Elsa.Api.Client.Extensions
@using System.Text.Json
@using Elsa.Api.Client.Converters
@using Elsa.Studio.Workflows.Domain.Contexts
@{
    const string white = "#ffffff";
    var colorStyle = CanStartWorkflow ? $"color: {white};" : "";
}
<MudPaper
    Class="elsa-activity pa-3"
    Style="@($"border-left-color: {_color}; {(CanStartWorkflow ? $"background-color: {_color}" : "")};")"
    Outlined="true">
    <MudStack Row="true" AlignItems="AlignItems.Center" Style="height:100%">
        @if (_icon != null)
        {
            <MudIcon Icon="@_icon" Style="@colorStyle"></MudIcon>
        }
        <MudStack Style="height:100%" Justify="Justify.Center">
            <MudText Typo="Typo.body1" Style="@colorStyle">@_label</MudText>

            @if (_ports.Any(x => x.Type == PortType.Embedded))
            {
                <MudStack Row="true">
                    @foreach (var port in _ports.Where(x => x.Type == PortType.Embedded))
                    {
                        var portName = port.Name;
                        var portProvider = ActivityPortService.GetProvider(_activityDescriptor.TypeName);
                        var childActivity = portProvider.ResolvePort(portName, new PortProviderContext(_activityDescriptor, Activity));

                        @if (childActivity != null)
                        {
                            <MudField Label="@port.DisplayName" Variant="Variant.Outlined">
                                <div id="@($"activity-{childActivity.GetId()}")" class="embedded-port embedded-port-occupied" data-port-name="@port.Name" @onclick="@(async () => await OnEmbeddedActivityClicked(childActivity))">
                                    <EmbeddedActivityWrapper ActivityId="@childActivity.GetId()" Activity="childActivity" IsSelected="@(SelectedPortName == port.Name)"/>
                                </div>
                            </MudField>
                        }
                        else
                        {
                            <a @onclick="@(() => OnEmptyPortClicked(port))" @onclick:preventDefault>
                                <MudPaper Elevation="0" Class="embedded-port pa-4" data-port-name="@port.Name" Style="border: 1px dashed var(--mud-palette-lines-default)">
                                    @port.DisplayName
                                </MudPaper>
                            </a>
                        }
                    }
                </MudStack>
            }

            @if (!string.IsNullOrWhiteSpace(_description) && _showDescription)
            {
                <MudText Typo="Typo.caption" Style="@colorStyle">@_description</MudText>
            }
        </MudStack>
    </MudStack>

</MudPaper>