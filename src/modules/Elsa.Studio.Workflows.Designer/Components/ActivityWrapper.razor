@using Elsa.Studio.Workflows.Designer.Interop
@using System.Text.Json
@using Elsa.Studio.Workflows.Core.Contracts
<MudPaper
    Class="pa-3"
    Style="border-left: solid 6px var(--mud-palette-primary); filter: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 2px rgb(0 0 0 / 0.06)); height: 100%;"
    Outlined="true">
    <MudStack Row="true" AlignItems="AlignItems.Center">
        <MudIcon Icon="@DashboardIcons.Tabler.PenTool"></MudIcon>
        @_label
    </MudStack>

</MudPaper>

@code
{
    private string _label = default!;

    [Parameter]
    public string? ElementId { get; set; }

    [Parameter]
    public string ActivityId { get; set; } = default!;

    [Parameter]
    public JsonElement ActivityModel { get; set; }

    [Inject]
    DesignerJsInterop DesignerInterop { get; set; } = default!;
    
    [Inject]
    IActivityRegistry ActivityRegistry { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var activityType = ActivityModel.GetProperty("type").GetString()!;
        var descriptor = await ActivityRegistry.FindAsync(activityType);
        _label = descriptor?.DisplayName ?? descriptor?.Name ?? "Unknown Activity";

        if (!string.IsNullOrEmpty(ElementId))
            await DesignerInterop.UpdateActivityNodeAsync(ElementId, ActivityModel);
    }
}