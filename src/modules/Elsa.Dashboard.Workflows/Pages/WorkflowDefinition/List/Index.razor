@page "/workflows/definitions"
@using Elsa.Dashboard.Workflows.Models
@using Variant = MudBlazor.Variant
@inject NavigationManager NavigationManager

<PageTitle>Workflow definitions</PageTitle>

<MudContainer MaxWidth="MaxWidth.False">
    <PageHeading Text="Workflow definitions"/>

    <MudTable ServerData="@(new Func<TableState, Task<TableData<WorkflowDefinition>>>(ServerReload))" Dense="false" Hover="true" @ref="_table" Elevation="0" T="WorkflowDefinition" OnRowClick="@RowClick" RowStyle="cursor: pointer;">
        <ToolBarContent>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@New">Create workflow</MudButton>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>
                <MudTableSortLabel SortLabel="id_field" T="WorkflowDefinition">ID</MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortLabel="name_field" T="WorkflowDefinition">Name</MudTableSortLabel>
            </MudTh>
            <MudTh Style="text-align:right">
                <MudTableSortLabel SortLabel="version_field" T="WorkflowDefinition">Version</MudTableSortLabel>
            </MudTh>
            <MudTh>
                Description
            </MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="ID">@context.DefinitionId</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Version" Style="text-align:right">@context.Version</MudTd>
            <MudTd DataLabel="Description">@context.Description</MudTd>
            <MudTd DataLabel="" Style="text-align:right">
                <MudIcon Icon="@Icons.TwoTone.Edit" Size="Size.Small" @onclick="Edit"/>
                <MudIcon Icon="@Icons.TwoTone.Delete" Size="Size.Small"/>
            </MudTd>
        </RowTemplate>
        <NoRecordsContent>
            <MudText>No workflow definitions found</MudText>
        </NoRecordsContent>
        <LoadingContent>
            <MudText>Loading...</MudText>
        </LoadingContent>
        <PagerContent>
            <MudTablePager/>
        </PagerContent>
    </MudTable>
</MudContainer>

@code {
    private IEnumerable<WorkflowDefinition> _pagedData = null!;
    private MudTable<WorkflowDefinition> _table = null!;

    private int _totalItems;
    private string? _searchString;

    /// <summary>
    /// Here we simulate getting the paged, filtered and ordered data from the server
    /// </summary>
    private async Task<TableData<WorkflowDefinition>> ServerReload(TableState state)
    {
        //var data = await HttpClient.GetFromJsonAsync<List<WorkflowDefinition>>("webapi/periodictable");
        var data = new List<WorkflowDefinition>
        {
            new(Guid.NewGuid().ToString(), Guid.NewGuid().ToString(), 1, "Workflow 1", "A workflow")
        };
        await Task.Delay(300);

        _totalItems = data.Count();
        _pagedData = data.Skip(state.Page * state.PageSize).Take(state.PageSize).ToArray();
        return new TableData<WorkflowDefinition> { TotalItems = _totalItems, Items = _pagedData };
    }

    private void New()
    {
        Edit();
    }

    private void Edit(string definitionId)
    {
        NavigationManager.NavigateTo($"/workflows/definitions/{definitionId}/edit");
    }
    
    private void Edit()
    {
        var definitionId = Guid.NewGuid().ToString("N");
        Edit(definitionId);
    }

    private void RowClick(TableRowClickEventArgs<WorkflowDefinition> e)
    {
        Edit(e.Item.DefinitionId);
    }
    
    private void OnSearch(string text)
    {
        _searchString = text;
        _table.ReloadServerData();
    }

}