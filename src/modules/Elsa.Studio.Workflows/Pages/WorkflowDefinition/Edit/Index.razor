@page "/workflows/definitions/{definitionId}/edit"
@using Orientation = Radzen.Orientation
@using Elsa.Studio.Workflows.Models
@using Elsa.Studio.Workflows.Contracts
@using Elsa.Api.Client.Shared.Models
@using Elsa.Api.Client.Resources.WorkflowDefinitions.Models
@inject IWorkflowDefinitionService WorkflowDefinitionService

<PageTitle>Workflow definition</PageTitle>

<CascadingValue Value="_dragDropManager">
    <RadzenSplitter Orientation="Orientation.Horizontal" Style="height: calc(100vh - var(--mud-appbar-height));">
        <RadzenSplitterPane Size="15%" Min="100px">
            <ActivityPicker/>
        </RadzenSplitterPane>
        <RadzenSplitterPane Size="60%">
            <RadzenSplitter Orientation="Orientation.Vertical">
                <RadzenSplitterPane Size="60%">
                    <Workspace WorkflowDefinitions="@_workflowDefinitions"/>
                </RadzenSplitterPane>
                <RadzenSplitterPane Size="40%">
                    <ActivityProperties/>
                </RadzenSplitterPane>
            </RadzenSplitter>
        </RadzenSplitterPane>
        <RadzenSplitterPane Size="25%" Min="100px">
            <WorkflowProperties/>
        </RadzenSplitterPane>
    </RadzenSplitter>
</CascadingValue>

@code
{
    private readonly DragDropManager _dragDropManager = new();
    private ICollection<WorkflowDefinition> _workflowDefinitions = new List<WorkflowDefinition>();

    [Parameter]
    public string DefinitionId { get; set; } = default!;

    protected override async Task OnParametersSetAsync()
    {
        var definition = await WorkflowDefinitionService.FindByDefinitionIdAsync(DefinitionId, VersionOptions.Latest);
        _workflowDefinitions = new List<WorkflowDefinition> { definition! };
    }
}