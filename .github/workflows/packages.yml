name: Elsa Studio 3 Packages
on:
  workflow_dispatch:
  push:
    branches:
      - main
  release:
    types: [ prereleased ]
env:
  feedz_feed_source: 'https://f.feedz.io/elsa-workflows/elsa-3/nuget/index.json'
  nuget_feed_source: 'https://api.nuget.org/v3/index.json'

jobs:
  build:
    name: Build packages
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Verify commit exists in origin/main
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          git branch --remote --contains | grep origin/main
      - name: Set VERSION variable
        run: echo "VERSION=3.0.0-preview.${{github.run_number}}" >> $GITHUB_ENV
      - name: Build designer client assets
        working-directory: ./src/modules/Elsa.Studio.Workflows.Designer/ClientLib
        run: |
          npm install --force
          npm run build
      - name: Build
        run: dotnet build Elsa.Studio.sln --configuration Release /p:Version=${VERSION}
      - name: Test
        run: dotnet test Elsa.Studio.sln --configuration Release /p:Version=${VERSION} --no-build
      - name: Pack
        run: dotnet pack Elsa.Studio.sln --configuration Release /p:Version=${VERSION} /p:PackageOutputPath=$(pwd)/packages
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: elsa-studio-nuget-packages
          path: packages/*nupkg
        if: ${{ github.event_name == 'release' || github.event_name == 'push'}}
        
  build_npm:
    name: Build Elsa Studio WASM NPM package
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Publish CustomElements
        run: dotnet publish ./src/hosts/Elsa.Studio.Host.CustomElements --configuration Release -o ./wasm/ /p:Version=${VERSION}

      - name: Prepare npm package
        run: |
          cp -r ./src/hosts/Elsa.Studio.Host.CustomElements/_content npm/
          cp -r path-to-elsa.studio.hosts.customelements/_framework npm/
          cp path-to-package.json npm/

      - name: Publish npm package
        run: |
          cd npm
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  
  
  publish_preview_feedz:
    name: Publish to feedz.io
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ github.event_name == 'release' || github.event_name == 'push'}}
    steps:
      - name: Download Packages
        uses: actions/download-artifact@v3
        with:
          name: elsa-studio-nuget-packages

      - name: Publish to feedz.io
        run: dotnet nuget push *.nupkg -k ${{ secrets.FEEDZ_API_KEY }} -s ${{ env.feedz_feed_source }} --skip-duplicate

  publish_preview_nuget:
    name: Publish to nuget.org
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ github.event_name == 'release' || github.event_name == 'prereleased' }}
    steps:
      - name: Download Packages
        uses: actions/download-artifact@v3
        with:
          name: elsa-studio-nuget-packages

      - name: Publish to nuget.org
        run: dotnet nuget push *.nupkg -k ${{ secrets.NUGET_API_KEY }} -s ${{ env.nuget_feed_source }} --skip-duplicate
